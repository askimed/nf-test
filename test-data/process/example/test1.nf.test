nextflow_process {

  name "Test test1.nf"

  script "./test1.nf"
  process "test"

  test("Should create 5 output files") {

   when {
     params.lukas = 28
     params.forer = "22"
     params.outdir = "${outputDir}"
     process {
       """
       input[0]=Channel.of(1..5)
       """
     }  
   }

   then {
     assert workflow.success
     assert params.lukas == 28
     for (def i in 1..5){
       def file = new File("${params.outdir}/${i}_28.txt");
       assert file.exists()
       assert file.text == "lukas forer ${i}\n"
     }
     assert snapshot(
        workflow.success, path("${params.outdir}").list()
     ).match("process_test_1")
   }

  }


  test("Should create 5 output files from params file") {

   when {
     loadParams("$moduleDir/params.json")
     process {
       """
       input[0]=Channel.of(1..5)
       """
     }     
   }

   then {
     assert workflow.success
     assert params.lukas == 28
     for (def i in 1..5){
       def file = new File("${params.outdir}/${i}_28.txt");
       assert file.exists()
       assert file.text == "lukas forer ${i}\n"
     }
   }

  }
  
  test("Should create 5 output files from params file 2") {

   when {
     params {
       load("$moduleDir/params.json")
       lukas = 44
     }
     process {
       """
       input[0]=Channel.of(1..5)
       """
     }     
   }

   then {
     assert workflow.success
     assert params.lukas == 44
     for (def i in 1..5){
       def file = new File("${params.outdir}/${i}_44.txt");
       assert file.exists()
       assert file.text == "lukas forer ${i}\n"
     }
   }

  }

  test("Should create 5 output files from yaml file") {

   when {
     params {
       load("$moduleDir/params.yml")
     }
     process {
       """
       input[0]=Channel.of(1..5)
       """
     }       
   }

   then {
     assert workflow.success
     assert params.lukas == 28
     for (def i in 1..5){
       def file = new File("${params.outdir}/${i}_28.txt");
       assert file.exists()
       assert file.text == "lukas forer ${i}\n"
     }
   }

  }

  test("Should fail if outdir is missing") {

    //debug true

    when {
      params.lukas = 27
      params.forer = "22"
      process {
        """
        input[0]=Channel.of(1..5)
        """
      }     
    }

    then {
      assert workflow.failed
      assert params.lukas == 27
      assert params.forer == "22"
    }

  }

}
